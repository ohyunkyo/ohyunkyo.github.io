{"version":3,"file":"component---src-templates-blog-post-js-e9557ec0755d0ee02d9c.js","mappings":"uJAyCA,IAtCe,WACb,IAAQA,GAAsBC,EAAAA,EAAAA,gBAAe,cAArCD,kBAcFE,EAAc,IAAIC,IAExBH,EAAkBI,MAAMC,SAAQ,YAEzB,IADLC,EACI,EADJA,OAEIA,GAAUA,EAAOC,UACnBL,EAAYM,IAAIF,EAAOC,aAI3B,IAAME,EAAcC,MAAMC,KAAKT,GAE/B,OACE,uBAAKU,MAAM,WAAX,oBAEGH,EAAYI,KAAI,SAAAN,GACf,OAAO,4BAAM,gBAAC,EAAAO,KAAD,CAAMC,GAAE,aAAeR,GAAaA,GAA1C,c,sDCqBf,IA5CY,WAAO,IAAD,IACVS,GAAOf,EAAAA,EAAAA,gBAAe,aAiBtBgB,EAAM,UAAGD,EAAKE,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGJ,EAAKE,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,uDACJC,MAAO,IACPC,OAAQ,IACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,yBACE,8BAASb,EAAOa,MAAc,4BAC7Bb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KAAK,2BAAM,2BAFjC,QAGO,qBAAGC,KAAI,wBAAwBZ,MAAAA,OAAA,EAAAA,EAAQa,SAAR,KAA/B,gB,0FC7Bf,EAfwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,uBAAKtB,MAAM,oBACRsB,EAAK5B,OAAOC,UACX,oDAEE,gBAAC,EAAAO,KAAD,CAAMC,GAAE,aAAemB,EAAK5B,OAAOC,UAChC2B,EAAK5B,OAAOC,a,uCC2DzB,EA7DyB,SAAC,GAAwB,IAAD,EAArBS,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAC1BD,EAAOlB,EAAKoB,eACZC,GAAY,UAAArB,EAAKE,KAAKC,oBAAV,eAAwBmB,QAAxB,QACVC,EAAmBvB,EAAnBuB,SAAUC,EAASxB,EAATwB,KAElB,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOJ,EAAKO,YAAYH,MACxBI,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAEpD,gBAACC,EAAA,EAAD,MACA,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,gBAAC,EAAD,CAAiBZ,KAAMA,IACvB,8BACE,sBAAIa,SAAS,YAAYb,EAAKO,YAAYH,OAC1C,yBAAIJ,EAAKO,YAAYO,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQhB,EAAKiB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK1B,UAAU,iBACb,sBACE+B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAAzB,KAAD,CAAMC,GAAIwB,EAASjC,OAAOoD,KAAMC,IAAI,QAApC,KACKpB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAA1B,KAAD,CAAMC,GAAIyB,EAAKlC,OAAOoD,KAAMC,IAAI,QAC7BnB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/NavBar.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/CurrentCategory.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery} from \"gatsby\"\r\n\r\nconst NavBar = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allMarkdownRemark {\r\n          nodes {\r\n            fields {\r\n              category\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const categorySet = new Set();\r\n\r\n  allMarkdownRemark.nodes.forEach(({\r\n    fields\r\n  }) => {\r\n    if (fields && fields.category) {\r\n      categorySet.add(fields.category);\r\n    }\r\n  });\r\n\r\n  const categoryArr = Array.from(categorySet)\r\n\r\n  return (\r\n    <div class=\"nav-bar\">\r\n      Categories : &nbsp;&nbsp;&nbsp;&nbsp;\r\n      {categoryArr.map(category => {\r\n        return <span><Link to={`/category/${category}`}>{category}</Link>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      })}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default NavBar","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"https://avatars.githubusercontent.com/u/53898395?v=4\"\r\n        width={110}\r\n        height={110}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          <strong>{author.name}</strong><br />\r\n          {author?.summary || null}<br /><br />\r\n          깃허브: <a href={`https://github.com/${social?.github || ``}`}>ohyunkyo</a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import {Card, Col} from \"react-bootstrap\";\r\nimport {Link} from \"gatsby\";\r\nimport * as React from \"react\";\r\n\r\nconst CurrentCategory = ({ post }) => {\r\n  return (\r\n    <div class=\"current-category\">\r\n      {post.fields.category && (\r\n        <span>\r\n          Current Category is &nbsp;\r\n          <Link to={`/category/${post.fields.category}`}>\r\n            {post.fields.category}\r\n          </Link>\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentCategory","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport CurrentCategory from \"../components/CurrentCategory\"\r\nimport NavBar from \"../components/NavBar\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <NavBar />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <CurrentCategory post={post}/>\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n      fields {\r\n        category\r\n        slug\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["allMarkdownRemark","useStaticQuery","categorySet","Set","nodes","forEach","fields","category","add","categoryArr","Array","from","class","map","Link","to","data","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","github","post","location","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","NavBar","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","slug","rel"],"sourceRoot":""}