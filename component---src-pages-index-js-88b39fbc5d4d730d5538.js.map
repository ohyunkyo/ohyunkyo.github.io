{"version":3,"file":"component---src-pages-index-js-88b39fbc5d4d730d5538.js","mappings":"gKAsDA,IA3CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAAc,2BAD3C,KACmDb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADtE,Q,0FCSR,EAnDc,WACZ,IAcMC,GAdwBhB,EAAAA,EAAAA,gBAAe,cAArCiB,kBAcwBD,MAE1BE,EAAc,IAAIC,IACxBH,EAAMI,SAAQ,YAEP,IADLC,EACI,EADJA,OAEIA,GAAUA,EAAOC,UACnBJ,EAAYK,IAAIF,EAAOC,aAI3B,IAAME,EAAcC,MAAMC,KAAKR,GAE/B,OACE,yCAEGM,EAAYG,KAAI,SAAAL,GACf,OAAO,4BAAM,gBAAC,EAAAM,KAAD,CAAMC,GAAE,aAAeP,GAAaA,GAA1C,WAET,2BAAK,2BAAK,6B,6BC+BhB,EA5DkB,SAAC,GAAwB,IAAD,EAArBvB,EAAqB,EAArBA,KAAM+B,EAAe,EAAfA,SACnBC,GAAY,UAAAhC,EAAKG,KAAKC,oBAAV,eAAwB6B,QAAxB,QACZC,EAAQlC,EAAKkB,kBAAkBD,MAErC,OAAqB,IAAjBiB,EAAMC,OAEN,gBAAC,IAAD,CAAQJ,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,EAAD,MACA,gBAAC,IAAD,MACA,sBAAIG,MAAO,CAAEC,UAAU,SACpBH,EAAMN,KAAI,SAAAU,GACT,IAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKhB,OAAOkB,KAEpD,OACE,sBAAIC,IAAKH,EAAKhB,OAAOkB,MACnB,2BACElC,UAAU,iBACVoC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAd,KAAD,CAAMC,GAAIQ,EAAKhB,OAAOkB,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAYX,KAG/B,6BAAQK,EAAKC,YAAYM,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQT,EAAKC,YAAYS,aAAeV,EAAKW,SAE/CL,SAAS,0B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/menus.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      <StaticImage\r\n        className=\"bio-avatar\"\r\n        layout=\"fixed\"\r\n        formats={[\"auto\", \"webp\", \"avif\"]}\r\n        src=\"../images/profile-pic.png\"\r\n        width={50}\r\n        height={50}\r\n        quality={95}\r\n        alt=\"Profile picture\"\r\n      />\r\n      {author?.name && (\r\n        <p>\r\n          Written by <strong>{author.name}</strong><br /> {author?.summary || null}\r\n          {` `}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery} from \"gatsby\"\r\n\r\nconst Menus = () => {\r\n  const { allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        allMarkdownRemark {\r\n          nodes {\r\n            fields {\r\n              category\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const nodes = allMarkdownRemark.nodes\r\n\r\n  const categorySet = new Set();\r\n  nodes.forEach(({\r\n    fields\r\n  }) => {\r\n    if (fields && fields.category) {\r\n      categorySet.add(fields.category);\r\n    }\r\n  });\r\n\r\n  const categoryArr = Array.from(categorySet)\r\n\r\n  return (\r\n    <div>\r\n      카테고리 : &nbsp;&nbsp;&nbsp;&nbsp;\r\n      {categoryArr.map(category => {\r\n        return <span><Link to={`/category/${category}`}>{category}</Link>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n      })}\r\n      <br/><br/><br/>\r\n    </div>\r\n  )\r\n\r\n  // return (\r\n  //   <div>\r\n  //     {categorySet.forEach(category => {\r\n  //       console.log(category)\r\n  //       return <Link to={`/category/${category}`}>{category}</Link>\r\n  //     })}\r\n  //   </div>\r\n  // )\r\n  \r\n  return false\r\n\r\n}\r\n\r\nexport default Menus","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Menus from \"../components/menus\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <Menus />\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <Menus />\r\n      <Bio />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                    <Link to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","nodes","allMarkdownRemark","categorySet","Set","forEach","fields","category","add","categoryArr","Array","from","map","Link","to","location","siteTitle","title","posts","length","style","listStyle","post","frontmatter","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}